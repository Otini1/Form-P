L4UsILvigDH_Alss0RoyZtT = RegisterF6,
L4UsILvigDH_XThXoET4FQ8 =TreatedPriSchool6to14M6,
L4UsILvigDH_nGA59YAxdK5  =TreatedPriSchool6to14F6,
L4UsILvigDH_PDSKxT8uiyw = TreatedPriSchool15to18M6,
L4UsILvigDH_MYjnyUHDVWn = TreatedPriSchool15to18F6,
MkHrYYSzTp7_rYd3mQQekOm= RegisterM7,
MkHrYYSzTp7_Alss0RoyZtT = RegisterF7,
MkHrYYSzTp7_XThXoET4FQ8 =TreatedPriSchool6to14M7,
MkHrYYSzTp7_nGA59YAxdK5  =TreatedPriSchool6to14F7,
MkHrYYSzTp7_PDSKxT8uiyw = TreatedPriSchool15to18M7,
MkHrYYSzTp7_MYjnyUHDVWn = TreatedPriSchool15to18F7,
IkxZpKUcapP_rYd3mQQekOm= RegisterM8,
IkxZpKUcapP_Alss0RoyZtT = RegisterF8,
IkxZpKUcapP_XThXoET4FQ8 =TreatedPriSchool6to14M8,
IkxZpKUcapP_nGA59YAxdK5  =TreatedPriSchool6to14F8,
IkxZpKUcapP_idjVjA4GQN = TreatedPriSchool15to18M8,
IkxZpKUcapP_MYjnyUHDVWn = TreatedPriSchool15to18F8,
hXaXYfL0A7v_M0IzOJgD6RX= TreatedOutSchool2to5M,
hXaXYfL0A7v_nXgUfAE6OW5 = TreatedOutSchool2to5F,
hXaXYfL0A7v_AvJJ1QTVttN =TreatedOutSchool6to14M,
hXaXYfL0A7v_pHAUmGSsSrm  =TreatedOutSchool6to14F,
hXaXYfL0A7v_lN0e5N4fSK4 = TreatedOutSchool15to18M,
hXaXYfL0A7v_rdOuZ7A3UEK = TreatedOutSchool15to18F,
gaTXTrINNL5_bjDvmb4bfuf = TreatedAdults,
XFIp3pOCHGA_bjDvmb4bfuf = TabletsSpoiled,
Rl6v7fQRI4E_bjDvmb4bfuf = TabletsRecieved,
wPt5NTQfB4q_bjDvmb4bfuf =TabletsTopped,
LC0LOn99KOq_bjDvmb4bfuf = TabletsReturned,
FzDLBkvTxyB_bjDvmb4bfuf = HeadsName.x,
SnDPTkcXx9m_bjDvmb4bfuf = HeadsPhone,
period = Year.y,
orgUnit = id)%>%
select(RaDuVnkE0GT_GQgozYRJ80,  LC0LOn99KOq_bjDvmb4bfuf, wPt5NTQfB4q_bjDvmb4bfuf, Rl6v7fQRI4E_bjDvmb4bfuf, XFIp3pOCHGA_bjDvmb4bfuf,
gaTXTrINNL5_bjDvmb4bfuf,hXaXYfL0A7v_rdOuZ7A3UEK,hXaXYfL0A7v_lN0e5N4fSK4, hXaXYfL0A7v_pHAUmGSsSrm,RaDuVnkE0GT_GQgozYRJ80,
RaDuVnkE0GT_PGTxhnw3wEz , RaDuVnkE0GT_apeN13sgXGy ,  RaDuVnkE0GT_iurGtp0wQO0 , t0eCki6Lnzf_rYd3mQQekOm ,  t0eCki6Lnzf_Alss0RoyZtT ,t0eCki6Lnzf_XThXoET4FQ8 ,
t0eCki6Lnzf_nGA59YAxdK5, t0eCki6Lnzf_PDSKxT8uiyw ,t0eCki6Lnzf_MYjnyUHDVWn ,  vNuOTAlvqxF_rYd3mQQekOm,  vNuOTAlvqxF_Alss0RoyZtT ,
vNuOTAlvqxF_XThXoET4FQ8 ,vNuOTAlvqxF_nGA59YAxdK5  , vNuOTAlvqxF_PDSKxT8uiyw ,  vNuOTAlvqxF_MYjnyUHDVWn , erSmAaiJ69J_rYd3mQQekOm ,erSmAaiJ69J_Alss0RoyZtT ,
erSmAaiJ69J_XThXoET4FQ8 , erSmAaiJ69J_nGA59YAxdK5  , erSmAaiJ69J_PDSKxT8uiyw ,bQBvgxIZBy0_rYd3mQQekOm, bQBvgxIZBy0_Alss0RoyZtT ,bQBvgxIZBy0_XThXoET4FQ8 ,
bQBvgxIZBy0_nGA59YAxdK5  ,bQBvgxIZBy0_PDSKxT8uiyw , bQBvgxIZBy0_MYjnyUHDVWn , yG4LFgdAnHl_rYd3mQQekOm,  yG4LFgdAnHl_Alss0RoyZtT , yG4LFgdAnHl_XThXoET4FQ8 ,
yG4LFgdAnHl_nGA59YAxdK5  , yG4LFgdAnHl_PDSKxT8uiyw ,yG4LFgdAnHl_MYjnyUHDVWn , L4UsILvigDH_rYd3mQQekOm,  L4UsILvigDH_Alss0RoyZtT , L4UsILvigDH_XThXoET4FQ8 ,
L4UsILvigDH_nGA59YAxdK5  ,L4UsILvigDH_PDSKxT8uiyw , L4UsILvigDH_MYjnyUHDVWn , MkHrYYSzTp7_rYd3mQQekOm, MkHrYYSzTp7_Alss0RoyZtT , MkHrYYSzTp7_XThXoET4FQ8 ,
MkHrYYSzTp7_nGA59YAxdK5  ,MkHrYYSzTp7_PDSKxT8uiyw , MkHrYYSzTp7_MYjnyUHDVWn , IkxZpKUcapP_rYd3mQQekOm, IkxZpKUcapP_Alss0RoyZtT , IkxZpKUcapP_XThXoET4FQ8 ,
IkxZpKUcapP_nGA59YAxdK5  ,IkxZpKUcapP_idjVjA4GQN , IkxZpKUcapP_MYjnyUHDVWn ,  hXaXYfL0A7v_M0IzOJgD6RX,
hXaXYfL0A7v_nXgUfAE6OW5 , hXaXYfL0A7v_AvJJ1QTVttN ,hXaXYfL0A7v_pHAUmGSsSrm  ,hXaXYfL0A7v_lN0e5N4fSK4 ,  hXaXYfL0A7v_rdOuZ7A3UEK,orgUnit)
setDT(data2)
data3 <-  melt(data2, id = c("orgUnit"))
x <- separate(data = data3, col = variable, into = c("dataElement", "categoryOptionCombo"))
x$dataSet <- "tEIlPIAd84k"
x$completeDate <- Sys.Date()
x$period <- "202301"
# group data by orgUnit
dfGroups <- x %>%
group_by(orgUnit)%>%
ungroup()
org_unit_id <- unique(dfGroups$orgUnit)
# create a named list to represent the JSON object with placeholders
json_obj <- list(
dataSet = "tEIlPIAd84k",
completeDate = "DATE_PLACEHOLDER",
period = "PERIOD_PLACEHOLDER",
orgUnit = "ORGUNIT_PLACEHOLDER",
dataValues = list(
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "PGTxhnw3wEz", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "GQgozYRJ80", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "apeN13sgXGy", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "iurGtp0wQO0", value = "VALUE_PLACEHOLDER"),
list(dataElement = "t0eCki6Lnzf", categoryOptionCombo = "rYd3mQQekOm", value = "VALUE_PLACEHOLDER")
)
)
# set the URL for the DHIS2 API
url <- "http://3.71.202.216:8080/api/dataValueSets"
# set the authentication credentials
auth_user <- "admin"
auth_pass <- "Maureen@2023"
# loop over each orgUnit and replace the dataValues for that unit
for (i in seq_along(unique(dfGroups$orgUnit))) {
# get the orgUnit and corresponding rows in the data frame
org_unit <- unique(dfGroups$orgUnit)[i]
unit_rows <- dfGroups$orgUnit == org_unit
# replace the orgUnit in the named list
json_obj$orgUnit <- org_unit
# replace the placeholders in the named list with data from the data frame
json_obj$completeDate <- dfGroups$completeDate[unit_rows]
json_obj$period <- dfGroups$period[unit_rows]
for (j in seq_along(dfGroups$dataElement)) {
de <- dfGroups$dataElement[j]
coc <- dfGroups$categoryOptionCombo[j]
val <- dfGroups$value[j]
if (unit_rows[j]) {
dv <- list(dataElement = de, categoryOptionCombo = coc, value = val)
json_obj$dataValues[[j]] <- dv
}
}
# convert the named list to a JSON object
json_str <- toJSON(json_obj, pretty = TRUE)
# create the HTTP POST request with the JSON object
res <- POST(url,
authenticate(auth_user, auth_pass),
add_headers("Content-Type" = "application/json"),
body = json_str,
encode = "json")
# check the response status
if (res$status_code == 200) {
message("Data values posted successfully for orgUnit ", org_unit)
} else {
message("Failed to post data values for orgUnit ", org_unit)
}
}
library(readr)
library(dplyr)
library(httr)
library(jsonlite)
library(data.table)
library(tidyr)
orgunits <- read.csv("C:/Users/M.Otini/Downloads/orguits.csv")
trt <- read.csv("C:/Users/M.Otini/Documents/2023_Treatment_Data_NEMIS/Treatment_Data.csv")
trt <- trt%>%
filter(DrugID == "ABZ",
County_Name.y == "Bomet")
data <- left_join(trt, orgunits, by = c( "NEMISCode" = "code"))
data <- data%>%
filter(!is.na(name))
data2 <- data%>%
rename(RaDuVnkE0GT_GQgozYRJ80 = RegisterFPre,
RaDuVnkE0GT_PGTxhnw3wEz = RegisterMPre,
RaDuVnkE0GT_apeN13sgXGy = TreatedPreSchoolM,
RaDuVnkE0GT_iurGtp0wQO0 = TreatedPreSchoolF,
t0eCki6Lnzf_rYd3mQQekOm = RegisterM1,
t0eCki6Lnzf_Alss0RoyZtT = RegisterF1,
t0eCki6Lnzf_XThXoET4FQ8 =TreatedPriSchool6to14M1,
t0eCki6Lnzf_nGA59YAxdK5 =TreatedPriSchool6to14F1,
t0eCki6Lnzf_PDSKxT8uiyw = TreatedPriSchool15to18M1,
t0eCki6Lnzf_MYjnyUHDVWn = TreatedPriSchool15to18F1,
vNuOTAlvqxF_rYd3mQQekOm= RegisterM2,
vNuOTAlvqxF_Alss0RoyZtT = RegisterF2,
vNuOTAlvqxF_XThXoET4FQ8 =TreatedPriSchool6to14M2,
vNuOTAlvqxF_nGA59YAxdK5  =TreatedPriSchool6to14F2,
vNuOTAlvqxF_PDSKxT8uiyw = TreatedPriSchool15to18M2,
vNuOTAlvqxF_MYjnyUHDVWn = TreatedPriSchool15to18F2,
erSmAaiJ69J_rYd3mQQekOm = RegisterM3,
erSmAaiJ69J_Alss0RoyZtT = RegisterF3,
erSmAaiJ69J_XThXoET4FQ8 =TreatedPriSchool6to14M3,
erSmAaiJ69J_nGA59YAxdK5  =TreatedPriSchool6to14F3,
erSmAaiJ69J_PDSKxT8uiyw = TreatedPriSchool15to18M3,
erSmAaiJ69J_MYjnyUHDVWn = TreatedPriSchool15to18F3,
bQBvgxIZBy0_rYd3mQQekOm= RegisterM4,
bQBvgxIZBy0_Alss0RoyZtT = RegisterF4,
bQBvgxIZBy0_XThXoET4FQ8 =TreatedPriSchool6to14M4,
bQBvgxIZBy0_nGA59YAxdK5  =TreatedPriSchool6to14F4,
bQBvgxIZBy0_PDSKxT8uiyw = TreatedPriSchool15to18M4,
bQBvgxIZBy0_MYjnyUHDVWn = TreatedPriSchool15to18F4,
yG4LFgdAnHl_rYd3mQQekOm= RegisterM5,
yG4LFgdAnHl_Alss0RoyZtT = RegisterF5,
yG4LFgdAnHl_XThXoET4FQ8 =TreatedPriSchool6to14M5,
yG4LFgdAnHl_nGA59YAxdK5  =TreatedPriSchool6to14F5,
yG4LFgdAnHl_PDSKxT8uiyw = TreatedPriSchool15to18M5,
yG4LFgdAnHl_MYjnyUHDVWn = TreatedPriSchool15to18F5,
L4UsILvigDH_rYd3mQQekOm= RegisterM6,
L4UsILvigDH_Alss0RoyZtT = RegisterF6,
L4UsILvigDH_XThXoET4FQ8 =TreatedPriSchool6to14M6,
L4UsILvigDH_nGA59YAxdK5  =TreatedPriSchool6to14F6,
L4UsILvigDH_PDSKxT8uiyw = TreatedPriSchool15to18M6,
L4UsILvigDH_MYjnyUHDVWn = TreatedPriSchool15to18F6,
MkHrYYSzTp7_rYd3mQQekOm= RegisterM7,
MkHrYYSzTp7_Alss0RoyZtT = RegisterF7,
MkHrYYSzTp7_XThXoET4FQ8 =TreatedPriSchool6to14M7,
MkHrYYSzTp7_nGA59YAxdK5  =TreatedPriSchool6to14F7,
MkHrYYSzTp7_PDSKxT8uiyw = TreatedPriSchool15to18M7,
MkHrYYSzTp7_MYjnyUHDVWn = TreatedPriSchool15to18F7,
IkxZpKUcapP_rYd3mQQekOm= RegisterM8,
IkxZpKUcapP_Alss0RoyZtT = RegisterF8,
IkxZpKUcapP_XThXoET4FQ8 =TreatedPriSchool6to14M8,
IkxZpKUcapP_nGA59YAxdK5  =TreatedPriSchool6to14F8,
IkxZpKUcapP_idjVjA4GQN = TreatedPriSchool15to18M8,
IkxZpKUcapP_MYjnyUHDVWn = TreatedPriSchool15to18F8,
hXaXYfL0A7v_M0IzOJgD6RX= TreatedOutSchool2to5M,
hXaXYfL0A7v_nXgUfAE6OW5 = TreatedOutSchool2to5F,
hXaXYfL0A7v_AvJJ1QTVttN =TreatedOutSchool6to14M,
hXaXYfL0A7v_pHAUmGSsSrm  =TreatedOutSchool6to14F,
hXaXYfL0A7v_lN0e5N4fSK4 = TreatedOutSchool15to18M,
hXaXYfL0A7v_rdOuZ7A3UEK = TreatedOutSchool15to18F,
gaTXTrINNL5_bjDvmb4bfuf = TreatedAdults,
XFIp3pOCHGA_bjDvmb4bfuf = TabletsSpoiled,
Rl6v7fQRI4E_bjDvmb4bfuf = TabletsRecieved,
wPt5NTQfB4q_bjDvmb4bfuf =TabletsTopped,
LC0LOn99KOq_bjDvmb4bfuf = TabletsReturned,
FzDLBkvTxyB_bjDvmb4bfuf = HeadsName.x,
SnDPTkcXx9m_bjDvmb4bfuf = HeadsPhone,
period = Year.y,
orgUnit = id)%>%
select(RaDuVnkE0GT_GQgozYRJ80,  LC0LOn99KOq_bjDvmb4bfuf, wPt5NTQfB4q_bjDvmb4bfuf, Rl6v7fQRI4E_bjDvmb4bfuf, XFIp3pOCHGA_bjDvmb4bfuf,
gaTXTrINNL5_bjDvmb4bfuf,hXaXYfL0A7v_rdOuZ7A3UEK,hXaXYfL0A7v_lN0e5N4fSK4, hXaXYfL0A7v_pHAUmGSsSrm,RaDuVnkE0GT_GQgozYRJ80,
RaDuVnkE0GT_PGTxhnw3wEz , RaDuVnkE0GT_apeN13sgXGy ,  RaDuVnkE0GT_iurGtp0wQO0 , t0eCki6Lnzf_rYd3mQQekOm ,  t0eCki6Lnzf_Alss0RoyZtT ,t0eCki6Lnzf_XThXoET4FQ8 ,
t0eCki6Lnzf_nGA59YAxdK5, t0eCki6Lnzf_PDSKxT8uiyw ,t0eCki6Lnzf_MYjnyUHDVWn ,  vNuOTAlvqxF_rYd3mQQekOm,  vNuOTAlvqxF_Alss0RoyZtT ,
vNuOTAlvqxF_XThXoET4FQ8 ,vNuOTAlvqxF_nGA59YAxdK5  , vNuOTAlvqxF_PDSKxT8uiyw ,  vNuOTAlvqxF_MYjnyUHDVWn , erSmAaiJ69J_rYd3mQQekOm ,erSmAaiJ69J_Alss0RoyZtT ,
erSmAaiJ69J_XThXoET4FQ8 , erSmAaiJ69J_nGA59YAxdK5  , erSmAaiJ69J_PDSKxT8uiyw ,bQBvgxIZBy0_rYd3mQQekOm, bQBvgxIZBy0_Alss0RoyZtT ,bQBvgxIZBy0_XThXoET4FQ8 ,
bQBvgxIZBy0_nGA59YAxdK5  ,bQBvgxIZBy0_PDSKxT8uiyw , bQBvgxIZBy0_MYjnyUHDVWn , yG4LFgdAnHl_rYd3mQQekOm,  yG4LFgdAnHl_Alss0RoyZtT , yG4LFgdAnHl_XThXoET4FQ8 ,
yG4LFgdAnHl_nGA59YAxdK5  , yG4LFgdAnHl_PDSKxT8uiyw ,yG4LFgdAnHl_MYjnyUHDVWn , L4UsILvigDH_rYd3mQQekOm,  L4UsILvigDH_Alss0RoyZtT , L4UsILvigDH_XThXoET4FQ8 ,
L4UsILvigDH_nGA59YAxdK5  ,L4UsILvigDH_PDSKxT8uiyw , L4UsILvigDH_MYjnyUHDVWn , MkHrYYSzTp7_rYd3mQQekOm, MkHrYYSzTp7_Alss0RoyZtT , MkHrYYSzTp7_XThXoET4FQ8 ,
MkHrYYSzTp7_nGA59YAxdK5  ,MkHrYYSzTp7_PDSKxT8uiyw , MkHrYYSzTp7_MYjnyUHDVWn , IkxZpKUcapP_rYd3mQQekOm, IkxZpKUcapP_Alss0RoyZtT , IkxZpKUcapP_XThXoET4FQ8 ,
IkxZpKUcapP_nGA59YAxdK5  ,IkxZpKUcapP_idjVjA4GQN , IkxZpKUcapP_MYjnyUHDVWn ,  hXaXYfL0A7v_M0IzOJgD6RX,
hXaXYfL0A7v_nXgUfAE6OW5 , hXaXYfL0A7v_AvJJ1QTVttN ,hXaXYfL0A7v_pHAUmGSsSrm  ,hXaXYfL0A7v_lN0e5N4fSK4 ,  hXaXYfL0A7v_rdOuZ7A3UEK,orgUnit)
setDT(data2)
data3 <-  melt(data2, id = c("orgUnit"))
x <- separate(data = data3, col = variable, into = c("dataElement", "categoryOptionCombo"))
x$dataSet <- "tEIlPIAd84k"
x$completeDate <- Sys.Date()
x$period <- "202301"
# group data by orgUnit
dfGroups <- x %>%
group_by(orgUnit)%>%
ungroup()
org_unit_id <- unique(dfGroups$orgUnit)
# create a named list to represent the JSON object with placeholders
json_obj <- list(
dataSet = "tEIlPIAd84k",
completeDate = "DATE_PLACEHOLDER",
period = "PERIOD_PLACEHOLDER",
orgUnit = "ORGUNIT_PLACEHOLDER",
dataValues = list(
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "PGTxhnw3wEz", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "GQgozYRJ80", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "apeN13sgXGy", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "iurGtp0wQO0", value = "VALUE_PLACEHOLDER"),
list(dataElement = "t0eCki6Lnzf", categoryOptionCombo = "rYd3mQQekOm", value = "VALUE_PLACEHOLDER")
)
)
# set the URL for the DHIS2 API
url <- "http://3.71.202.216:8080/api/dataValueSets"
# set the authentication credentials
auth_user <- "admin"
auth_pass <- "Maureen@2023"
# loop over each orgUnit and replace the dataValues for that unit
for (i in seq_along(unique(dfGroups$orgUnit))) {
# get the orgUnit and corresponding rows in the data frame
org_unit <- unique(dfGroups$orgUnit)[i]
unit_rows <- dfGroups$orgUnit == org_unit
# replace the orgUnit in the named list
json_obj$orgUnit <- org_unit
# replace the placeholders in the named list with data from the data frame
json_obj$completeDate <- dfGroups$completeDate[unit_rows]
json_obj$period <- dfGroups$period[unit_rows]
for (j in seq_along(dfGroups$dataElement)) {
de <- dfGroups$dataElement[j]
coc <- dfGroups$categoryOptionCombo[j]
val <- dfGroups$value[j]
if (unit_rows[j]) {
dv <- list(dataElement = de, categoryOptionCombo = coc, value = val)
json_obj$dataValues[[j]] <- dv
}
}
# convert the named list to a JSON object
json_str <- toJSON(json_obj, pretty = TRUE)
# create the HTTP POST request with the JSON object
res <- POST(url,
authenticate(auth_user, auth_pass),
add_headers("Content-Type" = "application/json"),
body = json_str,
encode = "json")
# check the response status
if (res$status_code == 200) {
message("Data values posted successfully for orgUnit ", org_unit)
} else {
message("Failed to post data values for orgUnit ", org_unit)
}
}
orgunits <- read.csv("C:/Users/M.Otini/Downloads/orguits.csv")
trt <- read.csv("C:/Users/M.Otini/Documents/2023_Treatment_Data_NEMIS/Treatment_Data.csv")
trt <- trt%>%
filter(DrugID == "ABZ",
County_Name.y == "Bomet")
data <- left_join(trt, orgunits, by = c( "NEMISCode" = "code"))
data <- data%>%
filter(!is.na(name))
data2 <- data%>%
rename(RaDuVnkE0GT_GQgozYRJ80 = RegisterFPre,
RaDuVnkE0GT_PGTxhnw3wEz = RegisterMPre,
RaDuVnkE0GT_apeN13sgXGy = TreatedPreSchoolM,
RaDuVnkE0GT_iurGtp0wQO0 = TreatedPreSchoolF,
t0eCki6Lnzf_rYd3mQQekOm = RegisterM1,
t0eCki6Lnzf_Alss0RoyZtT = RegisterF1,
t0eCki6Lnzf_XThXoET4FQ8 =TreatedPriSchool6to14M1,
t0eCki6Lnzf_nGA59YAxdK5 =TreatedPriSchool6to14F1,
t0eCki6Lnzf_PDSKxT8uiyw = TreatedPriSchool15to18M1,
t0eCki6Lnzf_MYjnyUHDVWn = TreatedPriSchool15to18F1,
vNuOTAlvqxF_rYd3mQQekOm= RegisterM2,
vNuOTAlvqxF_Alss0RoyZtT = RegisterF2,
vNuOTAlvqxF_XThXoET4FQ8 =TreatedPriSchool6to14M2,
vNuOTAlvqxF_nGA59YAxdK5  =TreatedPriSchool6to14F2,
vNuOTAlvqxF_PDSKxT8uiyw = TreatedPriSchool15to18M2,
vNuOTAlvqxF_MYjnyUHDVWn = TreatedPriSchool15to18F2,
erSmAaiJ69J_rYd3mQQekOm = RegisterM3,
erSmAaiJ69J_Alss0RoyZtT = RegisterF3,
erSmAaiJ69J_XThXoET4FQ8 =TreatedPriSchool6to14M3,
erSmAaiJ69J_nGA59YAxdK5  =TreatedPriSchool6to14F3,
erSmAaiJ69J_PDSKxT8uiyw = TreatedPriSchool15to18M3,
erSmAaiJ69J_MYjnyUHDVWn = TreatedPriSchool15to18F3,
bQBvgxIZBy0_rYd3mQQekOm= RegisterM4,
bQBvgxIZBy0_Alss0RoyZtT = RegisterF4,
bQBvgxIZBy0_XThXoET4FQ8 =TreatedPriSchool6to14M4,
bQBvgxIZBy0_nGA59YAxdK5  =TreatedPriSchool6to14F4,
bQBvgxIZBy0_PDSKxT8uiyw = TreatedPriSchool15to18M4,
bQBvgxIZBy0_MYjnyUHDVWn = TreatedPriSchool15to18F4,
yG4LFgdAnHl_rYd3mQQekOm= RegisterM5,
yG4LFgdAnHl_Alss0RoyZtT = RegisterF5,
yG4LFgdAnHl_XThXoET4FQ8 =TreatedPriSchool6to14M5,
yG4LFgdAnHl_nGA59YAxdK5  =TreatedPriSchool6to14F5,
yG4LFgdAnHl_PDSKxT8uiyw = TreatedPriSchool15to18M5,
yG4LFgdAnHl_MYjnyUHDVWn = TreatedPriSchool15to18F5,
L4UsILvigDH_rYd3mQQekOm= RegisterM6,
L4UsILvigDH_Alss0RoyZtT = RegisterF6,
L4UsILvigDH_XThXoET4FQ8 =TreatedPriSchool6to14M6,
L4UsILvigDH_nGA59YAxdK5  =TreatedPriSchool6to14F6,
L4UsILvigDH_PDSKxT8uiyw = TreatedPriSchool15to18M6,
L4UsILvigDH_MYjnyUHDVWn = TreatedPriSchool15to18F6,
MkHrYYSzTp7_rYd3mQQekOm= RegisterM7,
MkHrYYSzTp7_Alss0RoyZtT = RegisterF7,
MkHrYYSzTp7_XThXoET4FQ8 =TreatedPriSchool6to14M7,
MkHrYYSzTp7_nGA59YAxdK5  =TreatedPriSchool6to14F7,
MkHrYYSzTp7_PDSKxT8uiyw = TreatedPriSchool15to18M7,
MkHrYYSzTp7_MYjnyUHDVWn = TreatedPriSchool15to18F7,
IkxZpKUcapP_rYd3mQQekOm= RegisterM8,
IkxZpKUcapP_Alss0RoyZtT = RegisterF8,
IkxZpKUcapP_XThXoET4FQ8 =TreatedPriSchool6to14M8,
IkxZpKUcapP_nGA59YAxdK5  =TreatedPriSchool6to14F8,
IkxZpKUcapP_idjVjA4GQN = TreatedPriSchool15to18M8,
IkxZpKUcapP_MYjnyUHDVWn = TreatedPriSchool15to18F8,
hXaXYfL0A7v_M0IzOJgD6RX= TreatedOutSchool2to5M,
hXaXYfL0A7v_nXgUfAE6OW5 = TreatedOutSchool2to5F,
hXaXYfL0A7v_AvJJ1QTVttN =TreatedOutSchool6to14M,
hXaXYfL0A7v_pHAUmGSsSrm  =TreatedOutSchool6to14F,
hXaXYfL0A7v_lN0e5N4fSK4 = TreatedOutSchool15to18M,
hXaXYfL0A7v_rdOuZ7A3UEK = TreatedOutSchool15to18F,
gaTXTrINNL5_bjDvmb4bfuf = TreatedAdults,
XFIp3pOCHGA_bjDvmb4bfuf = TabletsSpoiled,
Rl6v7fQRI4E_bjDvmb4bfuf = TabletsRecieved,
wPt5NTQfB4q_bjDvmb4bfuf =TabletsTopped,
LC0LOn99KOq_bjDvmb4bfuf = TabletsReturned,
FzDLBkvTxyB_bjDvmb4bfuf = HeadsName.x,
SnDPTkcXx9m_bjDvmb4bfuf = HeadsPhone,
period = Year.y,
orgUnit = id)%>%
select(RaDuVnkE0GT_GQgozYRJ80,  LC0LOn99KOq_bjDvmb4bfuf, wPt5NTQfB4q_bjDvmb4bfuf, Rl6v7fQRI4E_bjDvmb4bfuf, XFIp3pOCHGA_bjDvmb4bfuf,
gaTXTrINNL5_bjDvmb4bfuf,hXaXYfL0A7v_rdOuZ7A3UEK,hXaXYfL0A7v_lN0e5N4fSK4, hXaXYfL0A7v_pHAUmGSsSrm,RaDuVnkE0GT_GQgozYRJ80,
RaDuVnkE0GT_PGTxhnw3wEz , RaDuVnkE0GT_apeN13sgXGy ,  RaDuVnkE0GT_iurGtp0wQO0 , t0eCki6Lnzf_rYd3mQQekOm ,  t0eCki6Lnzf_Alss0RoyZtT ,t0eCki6Lnzf_XThXoET4FQ8 ,
t0eCki6Lnzf_nGA59YAxdK5, t0eCki6Lnzf_PDSKxT8uiyw ,t0eCki6Lnzf_MYjnyUHDVWn ,  vNuOTAlvqxF_rYd3mQQekOm,  vNuOTAlvqxF_Alss0RoyZtT ,
vNuOTAlvqxF_XThXoET4FQ8 ,vNuOTAlvqxF_nGA59YAxdK5  , vNuOTAlvqxF_PDSKxT8uiyw ,  vNuOTAlvqxF_MYjnyUHDVWn , erSmAaiJ69J_rYd3mQQekOm ,erSmAaiJ69J_Alss0RoyZtT ,
erSmAaiJ69J_XThXoET4FQ8 , erSmAaiJ69J_nGA59YAxdK5  , erSmAaiJ69J_PDSKxT8uiyw ,bQBvgxIZBy0_rYd3mQQekOm, bQBvgxIZBy0_Alss0RoyZtT ,bQBvgxIZBy0_XThXoET4FQ8 ,
bQBvgxIZBy0_nGA59YAxdK5  ,bQBvgxIZBy0_PDSKxT8uiyw , bQBvgxIZBy0_MYjnyUHDVWn , yG4LFgdAnHl_rYd3mQQekOm,  yG4LFgdAnHl_Alss0RoyZtT , yG4LFgdAnHl_XThXoET4FQ8 ,
yG4LFgdAnHl_nGA59YAxdK5  , yG4LFgdAnHl_PDSKxT8uiyw ,yG4LFgdAnHl_MYjnyUHDVWn , L4UsILvigDH_rYd3mQQekOm,  L4UsILvigDH_Alss0RoyZtT , L4UsILvigDH_XThXoET4FQ8 ,
L4UsILvigDH_nGA59YAxdK5  ,L4UsILvigDH_PDSKxT8uiyw , L4UsILvigDH_MYjnyUHDVWn , MkHrYYSzTp7_rYd3mQQekOm, MkHrYYSzTp7_Alss0RoyZtT , MkHrYYSzTp7_XThXoET4FQ8 ,
MkHrYYSzTp7_nGA59YAxdK5  ,MkHrYYSzTp7_PDSKxT8uiyw , MkHrYYSzTp7_MYjnyUHDVWn , IkxZpKUcapP_rYd3mQQekOm, IkxZpKUcapP_Alss0RoyZtT , IkxZpKUcapP_XThXoET4FQ8 ,
IkxZpKUcapP_nGA59YAxdK5  ,IkxZpKUcapP_idjVjA4GQN , IkxZpKUcapP_MYjnyUHDVWn ,  hXaXYfL0A7v_M0IzOJgD6RX,
hXaXYfL0A7v_nXgUfAE6OW5 , hXaXYfL0A7v_AvJJ1QTVttN ,hXaXYfL0A7v_pHAUmGSsSrm  ,hXaXYfL0A7v_lN0e5N4fSK4 ,  hXaXYfL0A7v_rdOuZ7A3UEK,orgUnit)
setDT(data2)
data3 <-  melt(data2, id = c("orgUnit"))
View(data3)
x <- separate(data = data3, col = variable, into = c("dataElement", "categoryOptionCombo"))
x$dataSet <- "tEIlPIAd84k"
x$completeDate <- Sys.Date()
x$period <- "202301"
View(x)
# group data by orgUnit
dfGroups <- x %>%
group_by(orgUnit)%>%
ungroup()
org_unit_id <- unique(dfGroups$orgUnit)
# create a named list to represent the JSON object with placeholders
json_obj <- list(
dataSet = "tEIlPIAd84k",
completeDate = "DATE_PLACEHOLDER",
period = "PERIOD_PLACEHOLDER",
orgUnit = "ORGUNIT_PLACEHOLDER",
dataValues = list(
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "PGTxhnw3wEz", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "GQgozYRJ80", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "apeN13sgXGy", value = "VALUE_PLACEHOLDER"),
list(dataElement = "RaDuVnkE0GT", categoryOptionCombo = "iurGtp0wQO0", value = "VALUE_PLACEHOLDER"),
list(dataElement = "t0eCki6Lnzf", categoryOptionCombo = "rYd3mQQekOm", value = "VALUE_PLACEHOLDER")
)
)
# set the URL for the DHIS2 API
url <- "http://3.71.202.216:8080/api/dataValueSets"
# set the authentication credentials
auth_user <- "admin"
auth_pass <- "Maureen@2023"
# loop over each orgUnit and replace the dataValues for that unit
for (i in seq_along(unique(dfGroups$orgUnit))) {
# get the orgUnit and corresponding rows in the data frame
org_unit <- unique(dfGroups$orgUnit)[i]
unit_rows <- dfGroups$orgUnit == org_unit
# replace the orgUnit in the named list
json_obj$orgUnit <- org_unit
# replace the placeholders in the named list with data from the data frame
json_obj$completeDate <- dfGroups$completeDate[unit_rows]
json_obj$period <- dfGroups$period[unit_rows]
for (j in seq_along(dfGroups$dataElement)) {
de <- dfGroups$dataElement[j]
coc <- dfGroups$categoryOptionCombo[j]
val <- dfGroups$value[j]
if (unit_rows[j]) {
dv <- list(dataElement = de, categoryOptionCombo = coc, value = val)
json_obj$dataValues[[j]] <- dv
}
}
# convert the named list to a JSON object
json_str <- toJSON(json_obj, pretty = TRUE)
# create the HTTP POST request with the JSON object
res <- POST(url,
authenticate(auth_user, auth_pass),
add_headers("Content-Type" = "application/json"),
body = json_str,
encode = "json")
# check the response status
if (res$status_code == 200) {
message("Data values posted successfully for orgUnit ", org_unit)
} else {
message("Failed to post data values for orgUnit ", org_unit)
}
}
shiny::runApp('R/Form P')
runApp('R/Form P')
runApp('R/Form P')
runApp('R/Form P')
runApp('R/Form P')
runApp('R/Form P')
x<- c("x1","x2","x3","x4","x5","x6","x7","x8",)
x<- c("x1","x2","x3","x4","x5","x6","x7","x8")
ward<- as.data.frame(x)
View(ward)
df = data.frame(matrix(nrow = 0, ncol = length(x)))
colnames(df) = x
View(df)
df [ nrow(df) + 1 , ] <- NA
runApp('R/Form P')
runApp('R/Form P')
runApp('R/Form P')
runApp('R/Form P')
x<- c("x1","x2","x3","x4","x5","x6","x7","x8")
ward = data.frame(matrix(nrow = 0, ncol = length(x)))
colnames(ward) = x
ward[ nrow(ward) + 1 , ] <- NA
DT::datatable(ward,
container = sketch3,  rownames = F,selection = 'none',  filter = 'none',
options = list(headerCallback = JS(headerCallback),paging = F, searching = F, info = FALSE,sort = TRUE, scrollX = F))
library(DT)
library(plotly)
library(purrr)
library(htmltools)
library(data.table)
DT::datatable(ward,
container = sketch3,  rownames = F,selection = 'none',  filter = 'none',
options = list(headerCallback = JS(headerCallback),paging = F, searching = F, info = FALSE,sort = TRUE, scrollX = F))
sketch3 = htmltools::withTags(table(
class = 'display',
thead(  tr(
th(style = "border-top: solid 2px", rowspan = 1, 'Division/Ward Name:'),
th(style = "border-top: solid 2px",rowspan = 1, 'Total no. of schools:)'),
th(style = "border-top: solid 2px",colspan = 2, 'Enrolment in schools'),
th(style = "border-top: solid 2px",rowspan = 1, 'Total No. of Stand-alone centres'),
th(style = "border-top: solid 2px",rowspan = 1, 'Total Enrolment in standalone ECD centres (C):'),
th(style = "border-top: solid 2px",rowspan = 1, 'No. Bilharzia Schools:'),
th(style = "border-top: solid 2px",rowspan = 1, 'Total Enrolment (A+B+C):')
),
tr(
lapply(rep(c('Primary school enrolment (A)', 'ECD attached enrolment (B)')), th)
)
)
)
)
print(sketch3)
headerCallback <- c(
"function(thead, data, start, end, display){",
"  $(thead).closest('thead').find('th').css('border-right', 'solid 2px');",
"  $(thead).closest('thead').find('th').eq(0).css('border-left', 'solid 2px');",
"}"
)
DT::datatable(ward,
container = sketch3,  rownames = F,selection = 'none',  filter = 'none',
options = list(headerCallback = JS(headerCallback),paging = F, searching = F, info = FALSE,sort = TRUE, scrollX = F))
DT::datatable(ward,
container = sketch3,  rownames = F,selection = 'none',  filter = 'none',
options = list(headerCallback = JS(headerCallback),paging = F, searching = F, info = FALSE,sort = TRUE, scrollX = F))
x<- c("x1","x2","x3","x4","x5","x6","x7","x8","x9")
ward = data.frame(matrix(nrow = 0, ncol = length(x)))
colnames(ward) = x
ward[ nrow(ward) + 1 , ] <- NA
DT::datatable(ward,
container = sketch3,  rownames = F,selection = 'none',  filter = 'none',
options = list(headerCallback = JS(headerCallback),paging = F, searching = F, info = FALSE,sort = TRUE, scrollX = F))
sketch3 = htmltools::withTags(table(
class = 'display',
thead(  tr(
th(style = "border-top: solid 2px", rowspan = 2, 'Division/Ward Name:'),
th(style = "border-top: solid 2px",rowspan = 2, 'Total no. of schools:)'),
th(style = "border-top: solid 2px",colspan = 2, 'Enrolment in schools'),
th(style = "border-top: solid 2px",rowspan = 2, 'Total No. of Stand-alone centres'),
th(style = "border-top: solid 2px",rowspan = 2, 'Total Enrolment in standalone ECD centres (C):'),
th(style = "border-top: solid 2px",rowspan = 2, 'No. Bilharzia Schools:'),
th(style = "border-top: solid 2px",rowspan = 2, 'Total Enrolment (A+B+C)')
),
tr(
lapply(rep(c('Primary school enrolment (A)', 'ECD attached enrolment (B)')), th)
)
)
)
)
print(sketch3)
DT::datatable(ward,
container = sketch3,  rownames = F,selection = 'none',  filter = 'none',
options = list(headerCallback = JS(headerCallback),paging = F, searching = F, info = FALSE,sort = TRUE, scrollX = F))
runApp('R/Form P')
